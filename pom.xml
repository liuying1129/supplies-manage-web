<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.5.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.yklis</groupId>
	<artifactId>supplies-manage-web</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<dependencies>
		<dependency>
			<!-- 自带logback依赖(spring-boot-starter-logging),logback实现了SLF4J -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		
		<dependency>
			<!-- spring-boot-starter-web依赖spring-boot-starter-tomcat -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
				
		<!-- alibaba的JSON处理库 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.39</version>
        </dependency>		
		
		<!-- 解决报错:NoClassDefFoundError: javax/transaction/UserTransaction -->
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>
		
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
			
		<!-- dubbo微服务 -->
		<dependency>
            <groupId>com.yklis</groupId>
            <artifactId>supplies-manage-interface</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
		
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>dubbo</artifactId>
            <version>2.6.9</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.101tec</groupId>
            <artifactId>zkclient</artifactId>
            <version>0.11</version>
        </dependency>
        
		<!-- Netflix公司开源的zookeeper客户端 -->
		<!-- dubbo 2.6.5需要该ZK客户端支持,否则报错:NoClassDefFoundError: org/apache/curator/RetryPolicy -->
		<!-- dubbo 2.5.3版本则不需要 -->
		<dependency>
		    <groupId>org.apache.curator</groupId>
		    <artifactId>curator-framework</artifactId>
		    <version>4.1.0</version>
		</dependency>        				
		
		<!-- dubbo注解配置方式需要该依赖 -->
		<dependency>
		    <groupId>com.alibaba.spring</groupId>
		    <artifactId>spring-context-support</artifactId>
		    <version>1.0.2</version>
		</dependency>
		
		<!-- 图形验证码生成工具 -->
		<!-- kaptcha的工作原理:调用KaptchaServlet生成图片,同时将生成验证码的字符串放到HttpSession -->
		<dependency>
		    <groupId>com.github.penggle</groupId>
		    <artifactId>kaptcha</artifactId>
		    <version>2.3.2</version>
		</dependency>
		
		<!-- spring-session需要连接数据源 -->
		<dependency>
		    <groupId>com.mchange</groupId>
		    <artifactId>c3p0</artifactId>
		    <version>0.9.5.3</version>
		</dependency>
		
		<dependency>
			<groupId>net.sourceforge.jtds</groupId>
			<artifactId>jtds</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.session</groupId>
			<artifactId>spring-session-jdbc</artifactId>
		</dependency>
	</dependencies>

	<build>
		<!-- 如果不定义finalName，则生成的包名是artifactId-version.war -->
	    <!-- 定义finalName，则生成的包名是finalName.war -->
	    <finalName>supplies-manage-web</finalName>
		
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
